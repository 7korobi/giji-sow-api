{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///external \"fs\"","webpack:///external \"child_process\"","webpack:///external \"mongodb-bluebird\"","webpack:///./api/mongodb.coffee","webpack:///external \"morgan\"","webpack:///external \"body-parser\"","webpack:///./api/base.coffee","webpack:///external \"express\"","webpack:///external \"debug\"","webpack:///external \"config\"","webpack:///./api/index.coffee"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","fs","giji","mongo","sh","app","url","db","mongo_sow","connect","then","err","console","log","find","id","query","projection","collection","ObjectId","aggregate_message","cmd","out","keys","ext","aggregate","$group","_id","date_min","$min","date_max","$max","max","all","$sum","count","story_ids","$addToSet","$out","Promise","face_id","sow_auth_id","mestype","aggregate_potof","$match","$exists","$nin","$ne","live","role_id","$unwind","aggregate_max","remove","$project","$size","data","map","_id.face_id","list","top","sortBy","a","insert","oldlog","is_finish","$eq","dst","src","results","len","ref","length","api","push","writeFile","join","error","chmod","exec","stdout","stderr","scan","set_bases","set_base","story_id","logid","date","size","$strLenCP","$substr","catch","req","res","next","json","started","e","q","m_faces","faces","sow_auths","params","mestypes","roles","lives","fields","is_epilogue","comment","password","stories","ids","$in","events","messages","potofs","bodyParser","logger","conf","use","header","host","pm_id","port","express","process","env","assign","on","dir","use_api","set","listen"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"lodash\");","module.exports = require(\"fs\");","module.exports = require(\"child_process\");","module.exports = require(\"mongodb-bluebird\");","mongo = require \"mongodb-bluebird\"\nsh = require 'child_process'\nfs = require 'fs'\n_ = require \"lodash\"\n\nObjectId = false\n\ngiji = {}\n\nmodule.exports = (app, { url, db })->\n  return unless db.mongo_sow\n  mongo.connect db.mongo_sow\n  .then (db)->\n    end = (err, o)->\n      console.log err, o\n    giji.find = (id, query, projection)->\n      db.collection id, {ObjectId}\n      .find query, projection\n\n    giji.aggregate_message = ->\n      cmd = (out, keys, ext...)->\n        db.collection(\"message_by_story_for_face\", {ObjectId}).aggregate [\n          ext...\n        ,\n          $group:\n            _id: keys\n            date_min:\n              $min: \"$date_min\"\n            date_max:\n              $max: \"$date_max\"\n            max:\n              $max: \"$max\"\n            all:\n              $sum: \"$all\"\n            count:\n              $sum: \"$count\"\n            story_ids:\n              $addToSet: \"$_id.story_id\"\n        ,\n          $out: out\n        ], {ObjectId}\n\n      Promise.all [\n        cmd \"message_for_face\",\n          face_id: \"$_id.face_id\"\n        cmd \"message_for_face_sow_auth\",\n          face_id:     \"$_id.face_id\"\n          sow_auth_id: \"$_id.sow_auth_id\"\n        cmd \"message_for_face_mestype\",\n          face_id: \"$_id.face_id\"\n          mestype: \"$_id.mestype\"\n      ]\n\n\n    giji.aggregate_potof = ->\n      cmd = (out, keys, ext...)->\n        db.collection(\"potofs\", {ObjectId}).aggregate [\n          ext...\n        ,\n          $match:\n            sow_auth_id:\n              $exists: 1\n              $nin: [null, \"master\", \"admin\"]\n            face_id:\n              $exists: 1\n              $ne: null\n        ,\n          $group:\n            _id: keys\n            date_min:\n              $min: \"$timer.entrieddt\"\n            date_max:\n              $max: \"$timer.entrieddt\"\n            story_ids:\n              $addToSet: \"$story_id\"\n\n        ,\n          $out: out\n        ], {ObjectId}\n\n      Promise.all [\n        cmd \"potof_for_face\",\n          face_id: \"$face_id\"\n        cmd \"potof_for_face_live\",\n          face_id: \"$face_id\"\n          live: \"$live\"\n        cmd \"potof_for_face_sow_auth\",\n          face_id:     \"$face_id\"\n          sow_auth_id: \"$sow_auth_id\"\n        cmd \"potof_for_face_role\",\n          face_id: \"$face_id\"\n          role_id: \"$role\"\n        ,\n          $unwind: \"$role\"\n      ]\n\n    giji.aggregate_max = ->\n      db.collection(\"potof_for_face_sow_auth_max\", { ObjectId }).remove({})\n      .then ->\n        db.collection(\"potof_for_face_sow_auth\", { ObjectId }).aggregate [\n          $project:\n            _id: 1\n            count:\n              $size: \"$story_ids\"\n        ,\n          $group:\n            _id:\n              face_id: \"$_id.face_id\"\n            count:\n              $max: \"$count\"\n        ], {ObjectId}\n      .then (data)->\n        Promise.all data.map (o)->\n          giji.find \"potof_for_face_sow_auth\",\n            \"_id.face_id\": o._id.face_id\n            story_ids:\n              $size: o.count\n          .then (list)->\n            [top] = _.sortBy list, (a)-> a.date_min\n            o.date_min = top.date_min\n            o.date_max = top.date_max\n            o._id      = top._id\n            o\n      .then (data)->\n        db.collection(\"potof_for_face_sow_auth_max\", { ObjectId }).insert data\n\n    giji.oldlog = ->\n      db.collection(\"stories\", { ObjectId }).aggregate [\n        $match:\n          is_finish:\n            $eq: true\n      ,\n        $project:\n          _id: 1\n      ,\n        $group:\n          _id: null\n          story_ids:\n            $addToSet: \"$_id\"\n      ], {ObjectId}\n      .then ([o])->\n        data = for id in o.story_ids\n          dst = \"./static/sow/#{id}.json.gz\"\n          src = \"#{url.api}/story/oldlog/#{id}\"\n          \"\"\"  ls \"#{dst}\" || curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        dst = \"./static/sow/index.json.gz\"\n        src = \"#{url.api}/story/oldlog\"\n        data.push \"\"\" curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        dst = \"./static/aggregate/faces/index.json.gz\"\n        src = \"#{url.api}/aggregate/faces\"\n        data.push \"\"\" curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        data.push \"\"\" npm run gulp amazon:gz \"\"\"\n\n        fs.writeFile './static/sow.sh', data.join(\"\\n\") , (err)->\n          if err\n            console.error err\n          else\n            console.log \"write.\"\n            fs.chmod './static/sow.sh', 0o777, (err)->\n              if err\n                console.error err\n              else\n                console.log \"chmod.\"\n                sh.exec \"./static/sow.sh\", (err, stdout, stderr)->\n                  if err\n                    console.error err\n                  else\n                    console.log stderr\n        false\n\n    giji.scan = ->\n      db.collection(\"message_by_story_for_face\", { ObjectId }).aggregate [\n        $group:\n          _id: null\n          story_ids:\n            $addToSet: \"$_id.story_id\"\n      ], {ObjectId}\n      .then ([o])->\n        list = o?.story_ids ? []\n        db.collection(\"stories\", { ObjectId }).aggregate [\n          $match:\n            _id:\n              $nin: list\n            is_finish:\n              $eq: true\n        ,\n          $project:\n            _id: 1\n        ,\n          $group:\n            _id: null\n            story_ids:\n              $addToSet: \"$_id\"\n        ], {ObjectId}\n      .then ([o])->\n        list = o?.story_ids ? []\n        console.log \"step B\"\n        console.log list\n        set_bases = for id in list\n          giji.set_base id\n        Promise.all set_bases\n\n    giji.set_base = (story_id)->\n      db.collection(\"messages\", { ObjectId }).aggregate [\n        $match:\n          story_id: story_id\n          sow_auth_id:\n            $exists: 1\n            $ne: null\n          face_id:\n            $exists: 1\n            $ne: null\n          logid:\n            $exists: 1\n            $ne: null\n          log:\n            $exists: 1\n            $ne: null\n      ,\n        $project:\n          sow_auth_id: 1\n          story_id: 1\n          face_id: 1\n          logid: 1\n          date: 1\n          size:\n            $strLenCP: \"$log\"\n      ,\n        $group:\n          _id:\n            sow_auth_id: \"$sow_auth_id\"\n            story_id: \"$story_id\"\n            face_id: \"$face_id\"\n            mestype:\n              $substr: [\"$logid\", 0, 2]\n          date_min:\n            $min: \"$date\"\n          date_max:\n            $max: \"$date\"\n          max:\n            $max: \"$size\"\n          all:\n            $sum: \"$size\"\n          count:\n            $sum: 1\n      ], {ObjectId}\n      .then (data)->\n        db.collection(\"message_by_story_for_face\").insert data\n\n  .catch ->\n    console.log \"!!! mongodb connect error !!!\"\n\n\n  app.get '/api/aggregate/job', (req, res, next)->\n    giji.scan()\n    .then ->\n      giji.aggregate_message()\n    .then ->\n      giji.aggregate_potof()\n    .then ->\n      giji.aggregate_max()\n    .then ->\n      giji.oldlog()\n    .then ->\n      res.json\n        started: true\n      next()\n    .catch (e)->\n      res.json e\n      next()\n\n  app.get '/api/aggregate/faces', (req, res, next)->\n    q = {}\n    Promise.all [\n      giji.find \"message_for_face\", q\n      giji.find \"potof_for_face\", q\n      giji.find \"potof_for_face_sow_auth_max\", q\n    ]\n    .then ([m_faces, faces, sow_auths])->\n      res.json { m_faces, faces, sow_auths }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/aggregate/faces/:id', (req, res, next)->\n    { id } = req.params\n    q =\n      \"_id.face_id\": id\n    Promise.all [\n      giji.find \"message_for_face\", q\n      giji.find \"message_for_face_mestype\", q\n      giji.find \"message_for_face_sow_auth\", q\n      giji.find \"potof_for_face\", q\n      giji.find \"potof_for_face_role\", q\n      giji.find \"potof_for_face_live\", q\n    ]\n    .then ([m_faces, mestypes, sow_auths, faces, roles, lives])->\n      res.json { m_faces, mestypes, sow_auths, faces, roles, lives }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/progress', (req, res, next)->\n    q =\n      is_epilogue: false\n      is_finish: false\n    fields =\n      comment:  0\n      password: 0\n    json = {}\n    giji.find \"stories\", q, fields\n    .then (data)->\n      json.stories = data\n      data.map (o)-> \"#{o._id}-0\"\n    .then (ids)->\n      giji.find \"events\",\n        _id:\n          $in: ids\n    .then (data)->\n      json.events = data\n    .then ->\n      res.json json\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/oldlog', (req, res, next)->\n    q =\n      is_epilogue: true\n      is_finish:   true\n    fields =\n      comment:  0\n      password: 0\n    Promise.all [\n      giji.find \"stories\", q, fields\n      giji.find \"potof_for_face\", {}\n    ]\n    .then ([stories, faces])->\n      res.json { stories, faces }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/oldlog/:story_id', (req, res, next)->\n    { story_id } = req.params\n    fields =\n      password: 0\n    Promise.all [\n      giji.find \"stories\",  { _id: story_id, is_epilogue: true, is_finish: true}, fields\n      giji.find \"messages\", { story_id }\n      giji.find \"events\",   { story_id }\n      giji.find \"potofs\",   { story_id }\n    ]\n    .then ([stories, messages, events, potofs])->\n      unless stories.length\n        messages = events = potofs = []\n      res.json { stories, messages, events, potofs }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  return\n","module.exports = require(\"morgan\");","module.exports = require(\"body-parser\");","bodyParser = require 'body-parser'\nlogger = require 'morgan'\n\nmodule.exports = (app, conf)->\n  app.use logger 'dev'\n  app.use bodyParser.json()\n  app.use (req, res, next)->\n    res.header \"Access-Control-Allow-Origin\", \"*\"\n    res.header \"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\"\n    next()\n","module.exports = require(\"express\");","module.exports = require(\"debug\");","module.exports = require(\"config\");","express = require 'express'\napp = express()\nconf = require 'config'\ndebug = require('debug')('giji-sow-api:server')\n\n{ pm_id } = process.env\nObject.assign conf, { pm_id }\nprocess.on 'unhandledRejection', console.dir\n\n\nrequire(\"./base.coffee\")(app, conf)\nif conf.use_api\n  # for only legacy jinrogiji\n  require(\"./mongodb.coffee\" )(app, conf)\n\nhost = ( conf.host || '127.0.0.1' )\nport = ( conf.port || 4000 ) + (pm_id - 0 || 0)\n\napp.set 'port', port\napp.listen port, host\nconsole.log(\"Server is listening on http://#{host}:#{port}\")\n\n# var indexRouter = require('./routes/index')\n# var usersRouter = require('./routes/users')\n# app.use('/', indexRouter)\n# app.use('/users', usersRouter)\n"],"sourceRoot":""}
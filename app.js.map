{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs\"","webpack:///external \"lodash\"","webpack:///external \"express\"","webpack:///./api/base.coffee","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///./api/mongodb.coffee","webpack:///external \"mongodb-bluebird\"","webpack:///external \"child_process\"","webpack:///./api/index.coffee","webpack:///external \"config\"","webpack:///external \"debug\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","bodyParser","logger","app","conf","use","json","req","res","next","header","mongo","sh","fs","_","giji","url","db","mongo_sow","connect","then","err","console","log","find","id","query","projection","collection","ObjectId","aggregate_message","firsts","out","keys","ext","remove","aggregate","$sort","date_min","$group","_id","date","$min","$out","data","Promise","all","map","story_id","face_id","mestype","q","data_size","length","insert","cmd","date_max","$max","max","$sum","count","story_ids","$addToSet","sow_auth_id","aggregate_potof","$match","$exists","$nin","$ne","is_finish","live","role_id","$unwind","aggregate_max","$project","$size","list","top","sortBy","a","oldlog","$eq","dst","src","api","push","writeFile","join","error","chmod","exec","stdout","stderr","scan","set_bases","set_base","logid","size","$strLenCP","$substr","catch","started","e","m_faces","faces","sow_auths","params","mestypes","roles","lives","limit","Date","write_at","$gte","state","$in","plans","is_epilogue","fields","comment","password","stories","ids","events","messages","potofs","express","NODE_APP_INSTANCE","process","env","assign","on","dir","use_api","host","port","set","listen"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = require(\"fs\");","module.exports = require(\"lodash\");","module.exports = require(\"express\");","bodyParser = require 'body-parser'\nlogger = require 'morgan'\n\nmodule.exports = (app, conf)->\n  app.use logger 'dev'\n  app.use bodyParser.json()\n  app.use (req, res, next)->\n    res.header \"Access-Control-Allow-Origin\", \"*\"\n    res.header \"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\"\n    next()\n","module.exports = require(\"body-parser\");","module.exports = require(\"morgan\");","mongo = require \"mongodb-bluebird\"\nsh = require 'child_process'\nfs = require 'fs'\n_ = require \"lodash\"\n\nObjectId = false\n\ngiji = {}\n\nmodule.exports = (app, { url, db })->\n  return unless db.mongo_sow\n  mongo.connect db.mongo_sow\n  .then (db)->\n    end = (err, o)->\n      console.log err, o\n    giji.find = (id, query, projection)->\n      db.collection id, {ObjectId}\n      .find query, projection\n\n    giji.aggregate_message = ->\n      firsts = (out, keys, ext...)->\n        db.collection(out, { ObjectId }).remove({})\n        .then ->\n          db.collection(\"message_by_story_for_face\", {ObjectId}).aggregate [\n            $sort:\n              date_min: 1\n          ,\n            $group:\n              _id: keys\n              date:\n                $min: \"$date_min\"\n          ,\n            $out: \"#{out}_date_mins\"\n          ], {ObjectId}\n        .then (data)->\n          Promise.all data.map ({ _id, date })->\n            { story_id, face_id, mestype } = _id\n            console.log { c: 'messages', story_id, face_id, date }\n            db.collection(\"messags\", {ObjectId})\n            .find({ story_id, face_id, date })\n            .then (o)->\n              o.q = _id\n              o\n        .then (data)->\n          console.log { out, keys, ext, data_size: data.length }\n          if data.length\n            db.collection(out, { ObjectId }).insert data\n\n      cmd = (out, keys, ext...)->\n        db.collection(\"message_by_story_for_face\", {ObjectId}).aggregate [\n          ext...\n        ,\n          $group:\n            _id: keys\n            date_min:\n              $min: \"$date_min\"\n            date_max:\n              $max: \"$date_max\"\n            max:\n              $max: \"$max\"\n            all:\n              $sum: \"$all\"\n            count:\n              $sum: \"$count\"\n            story_ids:\n              $addToSet: \"$_id.story_id\"\n        ,\n          $out: out\n        ], {ObjectId}\n      Promise.all [\n        cmd \"message_for_face\",\n          face_id: \"$_id.face_id\"\n        cmd \"message_for_face_sow_auth\",\n          face_id:     \"$_id.face_id\"\n          sow_auth_id: \"$_id.sow_auth_id\"\n        cmd \"message_for_face_mestype\",\n          face_id: \"$_id.face_id\"\n          mestype: \"$_id.mestype\"\n        firsts \"message_firsts_for_story_face_mestype\",\n          story_id: \"$_id.story_id\"\n          face_id:  \"$_id.face_id\"\n          mestype:  \"$_id.mestype\"\n      ]\n\n\n    giji.aggregate_potof = ->\n      cmd = (out, story_ids, keys, ext...)->\n        db.collection(\"potofs\", {ObjectId}).aggregate [\n          ext...\n        ,\n          $match:\n            story_id:\n              $exists: 1\n              $nin: story_ids\n            sow_auth_id:\n              $exists: 1\n              $nin: [null, \"master\", \"admin\", \"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\"]\n            face_id:\n              $exists: 1\n              $ne: null\n        ,\n          $group:\n            _id: keys\n            date_min:\n              $min: \"$timer.entrieddt\"\n            date_max:\n              $max: \"$timer.entrieddt\"\n            story_ids:\n              $addToSet: \"$story_id\"\n\n        ,\n          $out: out\n        ], {ObjectId}\n        .then ->\n          console.log { out, keys, ext, story_ids }\n\n      giji.find \"stories\", { is_finish: false }, { _id: 1 }\n      .then (data)->\n        story_ids = data.map ({ _id })-> _id\n        console.log story_ids, \"is progress (deny).\"\n        Promise.all [\n          cmd \"potof_for_face\", story_ids,\n            face_id: \"$face_id\"\n          cmd \"potof_for_face_live\", story_ids,\n            face_id: \"$face_id\"\n            live: \"$live\"\n          cmd \"potof_for_face_sow_auth\", story_ids,\n            face_id:     \"$face_id\"\n            sow_auth_id: \"$sow_auth_id\"\n          cmd \"potof_for_face_role\", story_ids,\n            face_id: \"$face_id\"\n            role_id: \"$role\"\n          ,\n            $unwind: \"$role\"\n        ]\n\n    giji.aggregate_max = ->\n      db.collection(\"potof_for_face_sow_auth_max\", { ObjectId }).remove({})\n      .then ->\n        db.collection(\"potof_for_face_sow_auth\", { ObjectId }).aggregate [\n          $project:\n            _id: 1\n            count:\n              $size: \"$story_ids\"\n        ,\n          $group:\n            _id:\n              face_id: \"$_id.face_id\"\n            count:\n              $max: \"$count\"\n        ], {ObjectId}\n      .then (data)->\n        Promise.all data.map (o)->\n          giji.find \"potof_for_face_sow_auth\",\n            \"_id.face_id\": o._id.face_id\n            story_ids:\n              $size: o.count\n          .then (list)->\n            [top] = _.sortBy list, (a)-> a.date_min\n            o.date_min = top.date_min\n            o.date_max = top.date_max\n            o._id      = top._id\n            o\n      .then (data)->\n        console.log \"potof_for_face_sow_auth_max insert #{data.length} data.\"\n        db.collection(\"potof_for_face_sow_auth_max\", { ObjectId }).insert data\n\n    giji.oldlog = ->\n      db.collection(\"stories\", { ObjectId }).aggregate [\n        $match:\n          is_finish:\n            $eq: true\n      ,\n        $project:\n          _id: 1\n      ,\n        $group:\n          _id: null\n          story_ids:\n            $addToSet: \"$_id\"\n      ], {ObjectId}\n      .then ([o])->\n        data = for id in o.story_ids\n          dst = \"./static/sow/#{id}.json.gz\"\n          src = \"#{url.api}/story/oldlog/#{id}\"\n          \"\"\"  ls \"#{dst}\" || curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        dst = \"./static/sow/index.json.gz\"\n        src = \"#{url.api}/story/oldlog\"\n        data.push \"\"\" curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        dst = \"./static/aggregate/faces/index.json.gz\"\n        src = \"#{url.api}/aggregate/faces\"\n        data.push \"\"\" curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        data.push \"\"\" npm run gulp amazon_gz \"\"\"\n\n        fs.writeFile './static/sow.sh', data.join(\"\\n\") , (err)->\n          if err\n            console.error err\n          else\n            console.log \"write.\"\n            fs.chmod './static/sow.sh', 0o777, (err)->\n              if err\n                console.error err\n              else\n                console.log \"chmod.\"\n                sh.exec \"./static/sow.sh\", (err, stdout, stderr)->\n                  if err\n                    console.error err\n                  else\n                    console.log stderr\n        false\n\n    giji.scan = ->\n      db.collection(\"message_by_story_for_face\", { ObjectId }).aggregate [\n        $group:\n          _id: null\n          story_ids:\n            $addToSet: \"$_id.story_id\"\n      ], {ObjectId}\n      .then ([o])->\n        list = o?.story_ids ? []\n        db.collection(\"stories\", { ObjectId }).aggregate [\n          $match:\n            _id:\n              $nin: list\n            is_finish:\n              $eq: true\n        ,\n          $project:\n            _id: 1\n        ,\n          $group:\n            _id: null\n            story_ids:\n              $addToSet: \"$_id\"\n        ], {ObjectId}\n      .then ([o])->\n        list = o?.story_ids ? []\n        console.log \"step B\"\n        console.log list\n        set_bases = for id in list\n          giji.set_base id\n        Promise.all set_bases\n\n    giji.set_base = (story_id)->\n      console.log \"step for #{story_id}\"\n      db.collection(\"messages\", { ObjectId }).aggregate [\n        $match:\n          story_id: story_id\n          sow_auth_id:\n            $exists: 1\n            $ne: null\n          face_id:\n            $exists: 1\n            $ne: null\n          logid:\n            $exists: 1\n            $ne: null\n          log:\n            $exists: 1\n            $ne: null\n      ,\n        $project:\n          sow_auth_id: 1\n          story_id: 1\n          face_id: 1\n          logid: 1\n          date: 1\n          size:\n            $strLenCP: \"$log\"\n      ,\n        $group:\n          _id:\n            sow_auth_id: \"$sow_auth_id\"\n            story_id: \"$story_id\"\n            face_id: \"$face_id\"\n            mestype:\n              $substr: [\"$logid\", 0, 2]\n          date_min:\n            $min: \"$date\"\n          date_max:\n            $max: \"$date\"\n          max:\n            $max: \"$size\"\n          all:\n            $sum: \"$size\"\n          count:\n            $sum: 1\n      ], {ObjectId}\n      .then (data)->\n        if data.length\n          db.collection(\"message_by_story_for_face\").insert data\n        else\n          console.log \"#{story_id} for message_by_story_for_face size 0.\"\n  .catch ->\n    console.log \"!!! mongodb connect error !!!\"\n\n\n  app.get '/api/aggregate/job', (req, res, next)->\n    giji.scan()\n    .then ->\n      giji.aggregate_message()\n    .then ->\n      giji.aggregate_potof()\n    .then ->\n      giji.aggregate_max()\n    .then ->\n      giji.oldlog()\n    .then ->\n      res.json\n        started: true\n      next()\n    .catch (e)->\n      res.json e\n      next()\n\n  app.get '/api/aggregate/faces', (req, res, next)->\n    q = {}\n    Promise.all [\n      giji.find \"message_for_face\", q\n      giji.find \"potof_for_face\", q\n      giji.find \"potof_for_face_sow_auth_max\", q\n    ]\n    .then ([m_faces, faces, sow_auths])->\n      res.json { m_faces, faces, sow_auths }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/aggregate/faces/:id', (req, res, next)->\n    { id } = req.params\n    q =\n      \"_id.face_id\": id\n    Promise.all [\n      giji.find \"message_for_face\", q\n      giji.find \"message_for_face_mestype\", q\n      giji.find \"message_for_face_sow_auth\", q\n      giji.find \"potof_for_face\", q\n      giji.find \"potof_for_face_role\", q\n      giji.find \"potof_for_face_live\", q\n    ]\n    .then ([m_faces, mestypes, sow_auths, faces, roles, lives])->\n      res.json { m_faces, mestypes, sow_auths, faces, roles, lives }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n\n  app.get '/api/plan/progress', (req, res, next)->\n    range = 1000 * 3600 * 24 * 50 # 50 days\n    limit = new Date( new Date() - range )\n\n    giji.find \"sow_village_plans\",\n      write_at:\n        $gte: limit\n      state:\n        $in: [\n          null\n          /議事/\n        ]\n    .then (data)->\n      res.json { plans: data }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/progress', (req, res, next)->\n    q =\n      is_epilogue: false\n      is_finish: false\n    fields =\n      comment:  0\n      password: 0\n    json = {}\n    giji.find \"stories\", q, fields\n    .then (data)->\n      json.stories = data\n      data.map (o)-> \"#{o._id}-0\"\n    .then (ids)->\n      giji.find \"events\",\n        _id:\n          $in: ids\n    .then (data)->\n      json.events = data\n    .then ->\n      res.json json\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/oldlog', (req, res, next)->\n    q =\n      is_epilogue: true\n      is_finish:   true\n    fields =\n      comment:  0\n      password: 0\n    Promise.all [\n      giji.find \"stories\", q, fields\n      giji.find \"potof_for_face\", {}\n    ]\n    .then ([stories, faces])->\n      res.json { stories, faces }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/oldlog/:story_id', (req, res, next)->\n    { story_id } = req.params\n    fields =\n      password: 0\n    Promise.all [\n      giji.find \"stories\",  { _id: story_id, is_epilogue: true, is_finish: true}, fields\n      giji.find \"messages\", { story_id }\n      giji.find \"events\",   { story_id }\n      giji.find \"potofs\",   { story_id }\n    ]\n    .then ([stories, messages, events, potofs])->\n      unless stories.length\n        messages = events = potofs = []\n      res.json { stories, messages, events, potofs }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  return\n","module.exports = require(\"mongodb-bluebird\");","module.exports = require(\"child_process\");","express = require 'express'\napp = express()\nconf = require 'config'\ndebug = require('debug')('giji-sow-api:server')\n\n{ NODE_APP_INSTANCE } = process.env\nObject.assign conf, { NODE_APP_INSTANCE }\nprocess.on 'unhandledRejection', console.dir\n\n\nrequire(\"./base.coffee\")(app, conf)\nif conf.use_api\n  # for only legacy jinrogiji\n  require(\"./mongodb.coffee\" )(app, conf)\n\nhost = ( conf.host || '127.0.0.1' )\nport = ( conf.port || 4000 ) + 1 + (NODE_APP_INSTANCE - 0 || 0)\n\napp.set 'port', port\napp.listen port, host\nconsole.log(\"Server is listening on http://#{host}:#{port}\")\n\n# var indexRouter = require('./routes/index')\n# var usersRouter = require('./routes/users')\n# app.use('/', indexRouter)\n# app.use('/users', usersRouter)\n","module.exports = require(\"config\");","module.exports = require(\"debug\");"],"sourceRoot":""}
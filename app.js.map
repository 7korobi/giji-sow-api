{"version":3,"sources":["webpack:///webpack/bootstrap 5e30d39548da007ab827?088a","webpack:///external \"child_process\"?4308","webpack:///external \"fs\"?2e09","webpack:///external \"lodash\"?0c8b","webpack:///./api/base.coffee?0103","webpack:///./api/mongodb.coffee?3df6","webpack:///external \"express\"?d2d2","webpack:///external \"body-parser\"?4657","webpack:///external \"mongodb-bluebird\"?612c","webpack:///external \"morgan\"?19ef","webpack:///./api/agenda.coffee","webpack:///external \"config\"","webpack:///external \"debug\"","webpack:///./api/index.coffee","webpack:///./api/jobs/aggregate.coffee","webpack:///./api/jobs/process.coffee","webpack:///external \"agenda\"","webpack:///external \"agendash\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5e30d39548da007ab827","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 0\n// module chunks = 0 1","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 1\n// module chunks = 0 1","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 2\n// module chunks = 0 1","bodyParser = require 'body-parser'\nlogger = require 'morgan'\n\nmodule.exports = (app, conf)->\n  app.use logger 'dev'\n  app.use bodyParser.json()\n  app.use (req, res, next)->\n    res.header \"Access-Control-Allow-Origin\", \"*\"\n    res.header \"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\"\n    next()\n\n\n\n\n// WEBPACK FOOTER //\n// ./api/base.coffee","mongo = require \"mongodb-bluebird\"\nsh = require 'child_process'\nfs = require 'fs'\n_ = require \"lodash\"\n\nObjectId = false\n\ngiji = {}\n\nmodule.exports = (app, { url, db })->\n  return unless db.mongo_sow\n  mongo.connect db.mongo_sow\n  .then (db)->\n    end = (err, o)->\n      console.log err, o\n    giji.find = (id, query, projection)->\n      db.collection id, {ObjectId}\n      .find query, projection\n\n    giji.aggregate_message = ->\n      cmd = (out, keys, ext...)->\n        db.collection(\"message_by_story_for_face\", {ObjectId}).aggregate [\n          ext...\n        ,\n          $group:\n            _id: keys\n            date_min:\n              $min: \"$date_min\"\n            date_max:\n              $max: \"$date_max\"\n            max:\n              $max: \"$max\"\n            all:\n              $sum: \"$all\"\n            count:\n              $sum: \"$count\"\n            story_ids:\n              $addToSet: \"$_id.story_id\"\n        ,\n          $out: out\n        ], {ObjectId}\n\n      Promise.all [\n        cmd \"message_for_face\",\n          face_id: \"$_id.face_id\"\n        cmd \"message_for_face_sow_auth\",\n          face_id:     \"$_id.face_id\"\n          sow_auth_id: \"$_id.sow_auth_id\"\n        cmd \"message_for_face_mestype\",\n          face_id: \"$_id.face_id\"\n          mestype: \"$_id.mestype\"\n      ]\n\n\n    giji.aggregate_potof = ->\n      cmd = (out, keys, ext...)->\n        db.collection(\"potofs\", {ObjectId}).aggregate [\n          ext...\n        ,\n          $match:\n            sow_auth_id:\n              $exists: 1\n              $nin: [null, \"master\", \"admin\"]\n            face_id:\n              $exists: 1\n              $ne: null\n        ,\n          $group:\n            _id: keys\n            date_min:\n              $min: \"$timer.entrieddt\"\n            date_max:\n              $max: \"$timer.entrieddt\"\n            story_ids:\n              $addToSet: \"$story_id\"\n\n        ,\n          $out: out\n        ], {ObjectId}\n\n      Promise.all [\n        cmd \"potof_for_face\",\n          face_id: \"$face_id\"\n        cmd \"potof_for_face_live\",\n          face_id: \"$face_id\"\n          live: \"$live\"\n        cmd \"potof_for_face_sow_auth\",\n          face_id:     \"$face_id\"\n          sow_auth_id: \"$sow_auth_id\"\n        cmd \"potof_for_face_role\",\n          face_id: \"$face_id\"\n          role_id: \"$role\"\n        ,\n          $unwind: \"$role\"\n      ]\n\n    giji.aggregate_max = ->\n      db.collection(\"potof_for_face_sow_auth_max\", { ObjectId }).remove({})\n      .then ->\n        db.collection(\"potof_for_face_sow_auth\", { ObjectId }).aggregate [\n          $project:\n            _id: 1\n            count:\n              $size: \"$story_ids\"\n        ,\n          $group:\n            _id:\n              face_id: \"$_id.face_id\"\n            count:\n              $max: \"$count\"\n        ], {ObjectId}\n      .then (data)->\n        Promise.all data.map (o)->\n          giji.find \"potof_for_face_sow_auth\",\n            \"_id.face_id\": o._id.face_id\n            story_ids:\n              $size: o.count\n          .then (list)->\n            [top] = _.sortBy list, (a)-> a.date_min\n            o.date_min = top.date_min\n            o.date_max = top.date_max\n            o._id      = top._id\n            o\n      .then (data)->\n        db.collection(\"potof_for_face_sow_auth_max\", { ObjectId }).insert data\n\n    giji.oldlog = ->\n      db.collection(\"stories\", { ObjectId }).aggregate [\n        $match:\n          is_finish:\n            $eq: true\n      ,\n        $project:\n          _id: 1\n      ,\n        $group:\n          _id: null\n          story_ids:\n            $addToSet: \"$_id\"\n      ], {ObjectId}\n      .then ([o])->\n        data = for id in o.story_ids\n          dst = \"./static/sow/#{id}.json.gz\"\n          src = \"http:#{url.api}/story/oldlog/#{id}\"\n          \"\"\"  ls \"#{dst}\" || curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        dst = \"./static/sow/index.json.gz\"\n        src = \"http:#{url.api}/story/oldlog\"\n        data.push \"\"\" curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        dst = \"./static/aggregate/faces/index.json.gz\"\n        src = \"http:#{url.api}/aggregate/faces\"\n        data.push \"\"\" curl \"#{src}\" | gzip --stdout --best > \"#{dst}\"  \"\"\"\n\n        data.push \"\"\" npm run gulp amazon:gz \"\"\"\n\n        fs.writeFile './static/sow.sh', data.join(\"\\n\") , (err)->\n          console.log err\n        false\n\n    giji.scan = ->\n      db.collection(\"message_by_story_for_face\", { ObjectId }).aggregate [\n        $group:\n          _id: null\n          story_ids:\n            $addToSet: \"$_id.story_id\"\n      ], {ObjectId}\n      .then ([o])->\n        list = o?.story_ids ? []\n        db.collection(\"stories\", { ObjectId }).aggregate [\n          $match:\n            _id:\n              $nin: list\n            is_finish:\n              $eq: true\n        ,\n          $project:\n            _id: 1\n        ,\n          $group:\n            _id: null\n            story_ids:\n              $addToSet: \"$_id\"\n        ], {ObjectId}\n      .then ([o])->\n        list = o?.story_ids ? []\n        console.log \"step B\"\n        console.log list\n        set_bases = for id in list\n          giji.set_base id\n        Promise.all set_bases\n\n    giji.set_base = (story_id)->\n      db.collection(\"messages\", { ObjectId }).aggregate [\n        $match:\n          story_id: story_id\n          sow_auth_id:\n            $exists: 1\n            $ne: null\n          face_id:\n            $exists: 1\n            $ne: null\n          logid:\n            $exists: 1\n            $ne: null\n          log:\n            $exists: 1\n            $ne: null\n      ,\n        $project:\n          sow_auth_id: 1\n          story_id: 1\n          face_id: 1\n          logid: 1\n          date: 1\n          size:\n            $strLenCP: \"$log\"\n      ,\n        $group:\n          _id:\n            sow_auth_id: \"$sow_auth_id\"\n            story_id: \"$story_id\"\n            face_id: \"$face_id\"\n            mestype:\n              $substr: [\"$logid\", 0, 2]\n          date_min:\n            $min: \"$date\"\n          date_max:\n            $max: \"$date\"\n          max:\n            $max: \"$size\"\n          all:\n            $sum: \"$size\"\n          count:\n            $sum: 1\n      ], {ObjectId}\n      .then (data)->\n        db.collection(\"message_by_story_for_face\").insert data\n\n  .catch ->\n    console.log \"!!! mongodb connect error !!!\"\n\n\n  app.get '/api/aggregate/job', (req, res, next)->\n    giji.scan()\n    .then ->\n      giji.aggregate_message()\n    .then ->\n      giji.aggregate_potof()\n    .then ->\n      giji.aggregate_max()\n    .then ->\n      giji.oldlog()\n    .then ->\n      res.json\n        started: true\n      next()\n    .catch (e)->\n      res.json e\n      next()\n\n  app.get '/api/aggregate/faces', (req, res, next)->\n    q = {}\n    Promise.all [\n      giji.find \"message_for_face\", q\n      giji.find \"potof_for_face\", q\n      giji.find \"potof_for_face_sow_auth_max\", q\n    ]\n    .then ([m_faces, faces, sow_auths])->\n      res.json { m_faces, faces, sow_auths }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/aggregate/faces/:id', (req, res, next)->\n    { id } = req.params\n    q =\n      \"_id.face_id\": id\n    Promise.all [\n      giji.find \"message_for_face\", q\n      giji.find \"message_for_face_mestype\", q\n      giji.find \"message_for_face_sow_auth\", q\n      giji.find \"potof_for_face\", q\n      giji.find \"potof_for_face_role\", q\n      giji.find \"potof_for_face_live\", q\n    ]\n    .then ([m_faces, mestypes, sow_auths, faces, roles, lives])->\n      res.json { m_faces, mestypes, sow_auths, faces, roles, lives }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/progress', (req, res, next)->\n    q =\n      is_epilogue: false\n      is_finish: false\n    fields =\n      comment:  0\n      password: 0\n    json = {}\n    giji.find \"stories\", q, fields\n    .then (data)->\n      json.stories = data\n      data.map (o)-> \"#{o._id}-0\"\n    .then (ids)->\n      giji.find \"events\",\n        _id:\n          $in: ids\n    .then (data)->\n      json.events = data\n    .then ->\n      res.json json\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/oldlog', (req, res, next)->\n    q =\n      is_epilogue: true\n      is_finish:   true\n    fields =\n      comment:  0\n      password: 0\n    Promise.all [\n      giji.find \"stories\", q, fields\n      giji.find \"potof_for_face\", {}\n    ]\n    .then ([stories, faces])->\n      res.json { stories, faces }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  app.get '/api/story/oldlog/:story_id', (req, res, next)->\n    { story_id } = req.params\n    fields =\n      password: 0\n    Promise.all [\n      giji.find \"stories\",  { _id: story_id, is_epilogue: true, is_finish: true}, fields\n      giji.find \"messages\", { story_id }\n      giji.find \"events\",   { story_id }\n      giji.find \"potofs\",   { story_id }\n    ]\n    .then ([stories, messages, events, potofs])->\n      unless stories.length\n        messages = events = potofs = []\n      res.json { stories, messages, events, potofs }\n      next()\n    .catch (e)->\n      console.error req, e\n      next()\n\n  return\n\n\n\n// WEBPACK FOOTER //\n// ./api/mongodb.coffee","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 5\n// module chunks = 0 1","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 6\n// module chunks = 0 1","module.exports = require(\"mongodb-bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb-bluebird\"\n// module id = 7\n// module chunks = 0 1","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 8\n// module chunks = 0 1","Agenda = require \"agenda\"\nAgendash = require 'agendash'\n\nctxs = [\n  require \"./jobs/aggregate.coffee\"\n  require \"./jobs/process.coffee\"\n]\n\nmodule.exports = (app, { pm_id, db })->\n  pno = (pm_id - 1 || 0)\n  agenda = new Agenda\n    db:\n      address: db.mongo\n      collection: \"jobCollectionName\"\n      options:\n        server:\n          auto_reconnect: true\n\n  for { define, name } in ctxs\n    agenda.define name, define\n\n  agenda.on 'ready', ->\n    unless pno\n      for { every, name } in ctxs\n        if every\n          agenda.every every, name\n    agenda.start()\n\n  app.use '/agendash', Agendash agenda\n  console.log \"agenda use #{db.mongo}\"\n\n\n\n// WEBPACK FOOTER //\n// ./api/agenda.coffee","module.exports = require(\"config\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"config\"\n// module id = 14\n// module chunks = 1","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 15\n// module chunks = 1","express = require 'express'\napp = express()\nconf = require 'config'\ndebug = require('debug')('giji-sow-api:server')\n\n{ pm_id } = process.env\nObject.assign conf, { pm_id }\nprocess.on 'unhandledRejection', console.dir\n\n\nrequire(\"./base.coffee\")(app, conf)\nif conf.use_api\n  require(\"./agenda.coffee\"  )(app, conf)\n\n  # for only legacy jinrogiji\n  require(\"./mongodb.coffee\" )(app, conf)\n\nhost = ( conf.host || '127.0.0.1' )\nport = ( conf.port || 4000 ) + (pm_id - 0 || 0)\n\napp.set 'port', port\napp.listen port, host\nconsole.log(\"Server is listening on http://#{host}:#{port}\")\n\n# var indexRouter = require('./routes/index')\n# var usersRouter = require('./routes/users')\n# app.use('/', indexRouter)\n# app.use('/users', usersRouter)\n\n\n\n// WEBPACK FOOTER //\n// ./api/index.coffee","sh = require 'child_process'\n\nmodule.exports =\n  name: 'aggregate'\n  every: '12 hours'\n  define: (job, done)->\n    sh.exec \"curl http:#{env.url.api}/aggregate/job\", (err, stdout, stderr)->\n      sh.exec \"./static/sow.sh\", (err, stdout, stderr)->\n        if err\n          console.error err\n        else\n          console.log stderr\n\n\n\n// WEBPACK FOOTER //\n// ./api/jobs/aggregate.coffee","sh = require 'child_process'\n\nmodule.exports =\n  name: 'process'\n  every: '2 minutes'\n  define: (job, done)->\n    sh.exec 'ps uafxS | grep -v ^root', (err, stdout, stderr)->\n      if err\n        console.error err\n        console.error stderr\n      else\n        console.log stdout  \n\n\n\n// WEBPACK FOOTER //\n// ./api/jobs/process.coffee","module.exports = require(\"agenda\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"agenda\"\n// module id = 23\n// module chunks = 1","module.exports = require(\"agendash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"agendash\"\n// module id = 24\n// module chunks = 1"],"sourceRoot":""}